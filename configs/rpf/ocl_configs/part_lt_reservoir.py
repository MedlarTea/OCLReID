input_size = (256, 128)
identifier_params = dict(
    type='PartIdentifier',
    params = dict(
        agent="PartOCLWeightedClassifier",
        st_update_method="part_st_balance",
        st_retrieve_method="part_st_balance",
        lt_update_method="part_lt_reservoir",
        lt_retrieve_method="part_lt_balance",
        class_balance=True,
        not_freeze="conv3",  # freeze all
        st_feature="deep",  # deep, joint, all
        rr_alpha=1.0,  # original 0.1
        seed=123,
        init_conf_thr=0.15,  # original 0.1
        sliding_window_size=16,
        use_ori=True,
        use_joint=True,
        # part_nums=10,
        vis_map_size=(4,4,8),
        deep_feature_dim=512,
        joints_feature_dim=28,
        mem_size=32,
        lt_rate=8,  # original-8
        input_size=input_size,
        epochs=1,
        batch_size=32,
        backbone="resnet18",
        optimizer="SGD",
        learning_rate=0.01,
        ce_smooth=0.1,
        triplet_margin=1.0,  # 1.3
        triplet_loss='part_averaged_triplet_loss',
        delta_loss_thr = 0.02,
        weight_decay=0,
        cuda=True,
        buffer_tracker=True,
        id_switch_detection_thresh=0.35,
        reid_pos_confidence_thresh=0.7,
        reid_neg_confidence_thresh=0.3,
        reid_positive_count=7,
        initial_training_num_samples=5,
        min_target_confidence=-1,
        min_bbox_confidence=0.85
    )
)